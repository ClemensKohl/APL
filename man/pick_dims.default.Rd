% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CA.R
\name{pick_dims.default}
\alias{pick_dims.default}
\title{Compute statistics to help choose the number of dimensions}
\usage{
\method{pick_dims}{default}(
  obj,
  mat = NULL,
  method = "scree_plot",
  reps = 2,
  python = TRUE,
  return_plot = FALSE,
  ...
)
}
\arguments{
\item{mat}{A numeric matrix. For sequencing a count matrix, gene expression values with genes in rows and samples/cells in columns.
Should contain row and column names.}

\item{method}{String. Either "scree_plot", "avg_inertia", "maj_inertia" or "elbow_rule" (see Details section). Default "scree_plot".}

\item{reps}{Integer. Number of permutations to perform when choosing "elbow_rule". Default 2.}

\item{python}{A logical value indicating whether to use singular-value decomposition from the python package torch.
This implementation dramatically speeds up computation compared to `svd()` in R.}

\item{return_plot}{TRUE/FALSE. Whether a plot should be returned when choosing "elbow_rule". Default FALSE.}

\item{assay}{Character. The name of the assay to use for Seurat/SingleCellExperiment objects.}
}
\value{
For `avg_inertia`, `maj_inertia` and `elbow_rule` (when `return_plot=FALSE`) returns an integer, indicating the suggested number of dimensions to use.
`scree_plot` returns a ggplot object.
`elbow_rule` (for `return_plot=TRUE`) returns a list with two elements: "dims" contains the number of dimensions and "plot" a ggplot.
}
\description{
Allow the user to choose from 4 different methods ("avg_inertia", "maj_inertia", "scree_plot" and "elbow_rule")
to estimate the number of dimensions that best represent the data.
}
\details{
"avg_inertia" calculates the number of dimensions in which the inertia is above the average inertia.
"maj_inertia" calculates the number of dimensions in which cumulatively explain up to 80% of the total inertia.
"scree_plot" plots a scree plot.
"elbow_rule" Formalization of the commonly used elbow rule. Permutes the rows for each column and reruns `cacomp()` for a total of `reps` times.
 The number of relevant dimensions is obtained from the point where the line for the explained inertia of the permuted data intersects with the actual data.
}
