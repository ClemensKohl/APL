% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apl.R
\name{runAPL.default}
\alias{runAPL.default}
\title{Compute and plot Association plot}
\usage{
\method{runAPL}{default}(
  obj,
  caobj = NULL,
  dims = NULL,
  group,
  nrow = 10,
  top = 5000,
  score = TRUE,
  mark_rows = NULL,
  reps = 3,
  python = TRUE,
  row_labs = TRUE,
  col_labs = TRUE
)
}
\arguments{
\item{caobj}{A "cacomp" object as outputted from `cacomp()`. If not supplied will be calculated. Default NULL.}

\item{dims}{Integer. Number of dimensions to keep. Default NULL (keeps all dimensions).}

\item{group}{Numeric/Character. Vector of indices or column names of the columns to calculate centroid/x-axis direction.}

\item{nrow}{Integer. The top nrow scored row labels will be added to the plot if score = TRUE. Default 10.}

\item{top}{Integer. Number of most variable rows to retain. Default 5000.}

\item{score}{Logical. Whether rows should be scored and ranked. Ignored when a vector is supplied to mark_rows. Default TRUE.}

\item{mark_rows}{Character vector. Names of rows that should be highlighted in the plot. If not NULL, score is ignored. Default NULL.}

\item{reps}{Integer. Number of permutations during scoring. Default 3.}

\item{python}{A logical value indicating whether to use singular-value decomposition from the python package torch.
This implementation dramatically speeds up computation compared to `svd()` in R.}

\item{row_labs}{Logical. Whether labels for rows indicated by rows_idx should be labeled with text. Default TRUE.}

\item{col_labs}{Logical. Whether labels for columns indicated by cols_idx shouls be labeled with text. Default TRUE.}
}
\value{
Association plot (plotly object).
}
\description{
Computes singular value decomposition and coordinates for the Association plot.
}
\details{
The function is a wrapper that calls `cacomp()`, `apl_coords()`, `apl_score()` and finally `apl()` for ease of use.
The chosen defaults are most useful for genomics experiments, but for more fine grained control the functions
can be also run individually for the same results.
If score = FALSE, nrow and reps are ignored. If mark_rows is not NULL score is treated as if FALSE.
}
